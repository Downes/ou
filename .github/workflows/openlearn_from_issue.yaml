name: OpenLearnXML2
on:
  issues:
    types: [opened, reopened]
jobs:
  openlearn-files-issue:
    if: startsWith(github.event.issue.title, 'Fetch https://www.open.edu/openlearn') && (github.event.issue.author_association=='COLLABORATOR' || github.event.issue.author_association=='MEMBER' || github.event.issue.author_association=='OWNER') && github.event.issue.user.login==github.actor
    runs-on: ubuntu-latest
    steps:

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
 
  #  - name: Show context
  #    env:
  #      GITHUB_CONTEXT: ${{ toJson(github) }}
  #    run: echo "$GITHUB_CONTEXT"

    - name: Install dependencies
      run: python -m pip install --upgrade git+https://github.com/innovationOUtside/open-ouxml-tools.git
      
    - name: Copy Repository Contents
      uses: actions/checkout@v2


    - name: parse issue
      run: |
        issue="${{github.event.issue.body}}"
        echo "Issue: $issue"
        echo ::set-env name=url::"$(cut -d' ' -f2 <<<"$issue")"
        # echo ::set-env name=outdir::"$(cut -d' ' -f3 <<<"$issue")"
        echo ::set-env name=outdir::"content"
        echo ::set-env name=issue::$issue
    - name: grab ouxml
      run: |
        ouxml_grab $url
 
    - name: convert to md
      run: |
        ouxml2md --dbname openlearn_oer.db --outdir "$outdir"
        
    - name: git add and push
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add "$outdir"
        git add index.rst
        git add openlearn_oer.db
        # Should we be more forceful?
        # git add --all --force
        git commit -m"Add content to $outdir from $url" -a || true
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

  nbsphinx-publish:
    needs: openlearn-files-issue
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          activate-conda: false
          conda-channels: conda-forge
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          conda install -y pandoc librsvg tectonic
          python -m pip install sphinx
          python -m pip install nbsphinx
          python -m pip install jupytext
          (test -f requirements.txt && python -m pip install requirements.txt) || echo "No other requirements." 
      #- name: Show installed dependencies
      #  if: always()
      #  run: |
      #    python --version
      #    python -c "import nbsphinx; print('nbsphinx.__version__==', nbsphinx.__version__)"
      #    pandoc -v
      #    pip freeze

      - name: Use build branch context
        run: |
          sudo chown -R $(whoami):$(whoami) .
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --global user.name "$GITHUB_ACTOR"
          git checkout -b build
          # And bring down changes from master
          git merge master
      - name: Build docs HTML
        run: python -m sphinx . ./_build/html/ -b html

      - name: Deploy HTML site to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_build/html

      - name: Build docs LaTeX
        run: python -m sphinx . ./_build/latex/ -b latex
      - name: Build docs ePub
        continue-on-error: true
        run: python -m sphinx . ./_build/epub/ -b epub
      - name: Cache Tectonic (latex / PDF) Packages
        uses: actions/cache@v1
        with:
          path: ~/.cache/Tectonic
          key: ${{ runner.os }}-tectonic-packages
      - name: Build PDF from LaTeX
        continue-on-error: true
        run: tectonic ./_build/latex/nbsphinx.tex

      - name: Create _artifacts folder
        run: |
          mkdir - p _artifacts
          ( test -f ./_build/latex/nbsphinx.pdf && cp ./_build/latex/nbsphinx.pdf _artifacts) || echo "No PDF found."
          ( test -f ./_build/epub/sphinx.epub && cp ./_build/epub/sphinx.epub _artifacts) || echo "No EPUB found."
      - name: Upload _artifacts folder
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: docs
          path: ./_artifacts

      - name: Commits for build branch
        run: |       
          git add --all --force _build
          git commit -a --allow-empty-message -m 'Push build branch'
 
      - name: Push changes to build branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: build
          force: true
